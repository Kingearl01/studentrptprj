# Generated by Django 5.2.1 on 2025-06-05 13:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='e.g., 2023/2024', max_length=9, unique=True)),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Academic Year',
                'verbose_name_plural': 'Academic Years',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Nursery', 'Nursery'), ('Lower Primary', 'Lower Primary'), ('Upper Primary', 'Upper Primary'), ('JHS', 'JHS')], max_length=50, unique=True)),
                ('order', models.IntegerField(default=0, unique=True)),
            ],
            options={
                'verbose_name': 'Grade Level',
                'verbose_name_plural': 'Grade Levels',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/')),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('student_image', models.ImageField(blank=True, null=True, upload_to='student_images/')),
                ('current_academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='enrolled_students', to='studentrptcard.academicyear')),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='studentrptcard.gradelevel')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['grade_level', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('grade_levels', models.ManyToManyField(help_text='Select grade levels this subject is taught in.', related_name='subjects', to='studentrptcard.gradelevel')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['name'],
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='teacher_signatures/')),
                ('class_teacher_of', models.ForeignKey(blank=True, help_text='If this teacher is a class teacher for a specific grade level.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_teachers_assigned', to='studentrptcard.gradelevel')),
                ('subjects_taught', models.ManyToManyField(blank=True, help_text='Subjects this teacher teaches.', related_name='teachers_assigned', to='studentrptcard.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Term 1', 'Term 1'), ('Term 2', 'Term 2'), ('Term 3', 'Term 3')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('vacation_date', models.DateField(blank=True, null=True)),
                ('reopening_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='studentrptcard.academicyear')),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'ordering': ['academic_year', 'name'],
                'unique_together': {('academic_year', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_score', models.DecimalField(decimal_places=2, help_text='Score out of 50%', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('exam_score', models.DecimalField(decimal_places=2, help_text='Score out of 50%', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='studentrptcard.academicyear')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='studentrptcard.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='studentrptcard.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='studentrptcard.term')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
                'ordering': ['student', 'subject', 'term'],
                'unique_together': {('student', 'subject', 'term', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='ReportCardRemarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_days_present', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('attendance_days_absent', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('talent_and_interest', models.TextField(blank=True)),
                ('class_teacher_remarks', models.TextField(blank=True)),
                ('headteacher_remarks', models.TextField(blank=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_card_remarks', to='studentrptcard.academicyear')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_card_remarks', to='studentrptcard.student')),
                ('class_teacher_signature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_teacher_signed_remarks', to='studentrptcard.teacher')),
                ('headteacher_signature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headteacher_signed_remarks', to='studentrptcard.teacher')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_card_remarks', to='studentrptcard.term')),
            ],
            options={
                'verbose_name': 'Report Card Remark',
                'verbose_name_plural': 'Report Card Remarks',
                'unique_together': {('student', 'term', 'academic_year')},
            },
        ),
    ]
